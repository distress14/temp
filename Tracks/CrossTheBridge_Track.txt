./CrossTheBridge 

You received an invite! Do you want to open it? [Y]/n y
──────────────────
──▄▄─────▄───▄▄▄▄▄
▄▀──▀▄──█─█──█───█
█────█─█───█─█───█
─▀▄▄▀─▐▄▄▄▄▄▌█▄▄▄█
──────────────────

Welcome to a beautiful game!
If you win, you'll receive what you're looking for!
Wanna play? :) [Y]/n 
------
Rules
------ 
1. You must cross a bridge of 16 steps to win
2. At every step of the bridge, you need to choose between Left or Right path
3. If you choose the correct path, you proceed, if not... you'll be eliminated :)
4. If you cheat and try to get the correct path BEFOREHAND, you'll regret it.

Press Enter to begin! 


So. First
in generate_random_bridge -> is_someone_cheating -> ptrace:

if I use gdb and I try to debug the program, it will not let me do it

But I can patch it

call    _ptrace
cmp     rax, 0FFFFFFFFFFFFFFFFh
jnz     short loc_1B5E    

Edit in hex View JNZ (74) into JZ (75)

in generate_random_bridge:

cmp     [rbp+var_1C], 0Fh    //15 steps  var_1C==index of array of steps
jle     short loc_1C10     //JumpIfLessOrEqual

loc_1C10:
call    generate_random_step

in gbd we can put a breakpoint after the generate_random_step to try and cache the right step

0x0000555555555c23 <+78>:	call   0x555555555b7f <generate_random_step>
   0x0000555555555c28 <+83>:	mov    %al,(%rbx)
